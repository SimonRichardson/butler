{"name":"Butler","tagline":"Serve content in a monadic style.","body":"butler\r\n======\r\n\r\nServe content in a monadic style.\r\n\r\n```go\r\nrequest := Butler().\r\n    Get().\r\n    Path(\"/name/:id\").\r\n    ContentType(\"application/json\").\r\n    QueryInt(\"limit\")\r\n\r\nresponse := Butler().\r\n    ContentType(\"application/json\").\r\n    Content(output.HtmlEncoder{})\r\n\r\nlistEmployees := Service(request, response).Then(func(args map[string]g.Any) g.Any {\r\n    loadAllEmployees := func(x int) g.Any {\r\n        return []g.Any{}\r\n    }\r\n    return loadAllEmployees(args[\"limit\"].(int))\r\n})\r\n\r\nserver := Compile(listEmployees)\r\n\r\n// You can also render the server to markdown, for up to\r\n// date documentation\r\ndoc, _ := markdown.Output(server)\r\nfmt.FPrintln(os.Stdout, doc)\r\n\r\nservice := Remotely(server)(\"localhost\", 80)\r\nservice.Run()\r\n```\r\n\r\n### TODO\r\n\r\n- [ ] Markdown support\r\n- [ ] Query parameters support\r\n\r\n#### Notes\r\n\r\n- This is not idiomatic go and I don't care!\r\n","google":"UA-128184-3","note":"Don't delete this file! It's used internally to help with page regeneration."}